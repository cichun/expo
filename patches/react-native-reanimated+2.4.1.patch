diff --git a/node_modules/react-native-reanimated/android/build.gradle b/node_modules/react-native-reanimated/android/build.gradle
index 5bb494f..57488f3 100644
--- a/node_modules/react-native-reanimated/android/build.gradle
+++ b/node_modules/react-native-reanimated/android/build.gradle
@@ -107,5 +107,3 @@ while (!aar.exists()) {
 }
 
 artifacts.add("default", aar)
-
-apply from: './expo/linking.gradle'
diff --git a/node_modules/react-native-reanimated/android/expo/linking.gradle b/node_modules/react-native-reanimated/android/expo/linking.gradle
deleted file mode 100644
index 81ae08b..0000000
--- a/node_modules/react-native-reanimated/android/expo/linking.gradle
+++ /dev/null
@@ -1,46 +0,0 @@
-def isExpoLinked = false
-rootProject.getSubprojects().forEach({ project ->
-    if (project.plugins.hasPlugin("com.android.application")) {
-        if (project.configurations.implementation.getDependencies().find { dep -> dep.name == "expo" }) {
-            isExpoLinked = true
-        }
-    }
-})
-
-def safeExtGet(prop, fallback) {
-    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
-}
-
-if (isExpoLinked) {
-    apply plugin: 'com.android.library'
-
-    android {
-        // Disable aar bundling to fix the error when running `gradle assembleRelease` over `gradle :app:assembleRelease`
-        // which will throw `Direct local .aar file dependencies are not supported when building an AAR.`
-        tasks.whenTaskAdded { task ->
-            if (['bundleDebugAar', 'bundleReleaseAar'].contains(task.name)) {
-                task.enabled = false
-            }
-        }
-
-        compileSdkVersion safeExtGet('compileSdkVersion', 30)
-
-        sourceSets {
-            main.manifest.srcFile 'src/AndroidManifest.xml'
-            main.java.srcDirs = [ 'expo/src/main/java' ]
-        }
-
-        libraryVariants.all {
-            generateBuildConfigProvider?.get()?.enabled = false
-        }
-    }
-
-    dependencies {
-        implementation 'com.facebook.react:react-native:+'
-        implementation project(':expo-modules-core')
-
-        project.configurations.default.artifacts.each { artifact ->
-            api files(artifact.file)
-        }
-    }
-}
diff --git a/node_modules/react-native-reanimated/android/expo/src/main/java/com/swmansion/reanimated/EXReanimatedAdapter.java b/node_modules/react-native-reanimated/android/expo/src/main/java/com/swmansion/reanimated/EXReanimatedAdapter.java
deleted file mode 100644
index da76cd4..0000000
--- a/node_modules/react-native-reanimated/android/expo/src/main/java/com/swmansion/reanimated/EXReanimatedAdapter.java
+++ /dev/null
@@ -1,12 +0,0 @@
-package com.swmansion.reanimated;
-
-import com.facebook.react.bridge.JavaScriptContextHolder;
-import com.facebook.react.bridge.ReactApplicationContext;
-
-public class EXReanimatedAdapter {
-  public static void registerJSIModules(ReactApplicationContext reactApplicationContext, JavaScriptContextHolder jsContext) {
-    NodesManager nodesManager =
-      reactApplicationContext.getNativeModule(ReanimatedModule.class).getNodesManager();
-    nodesManager.initWithContext(reactApplicationContext);
-  }
-}
diff --git a/node_modules/react-native-reanimated/android/expo/src/main/java/expo/modules/adapters/reanimated/EXReanimatedPackage.java b/node_modules/react-native-reanimated/android/expo/src/main/java/expo/modules/adapters/reanimated/EXReanimatedPackage.java
deleted file mode 100644
index 635751c..0000000
--- a/node_modules/react-native-reanimated/android/expo/src/main/java/expo/modules/adapters/reanimated/EXReanimatedPackage.java
+++ /dev/null
@@ -1,26 +0,0 @@
-package expo.modules.adapters.reanimated;
-
-import android.content.Context;
-
-import com.facebook.react.bridge.JavaScriptContextHolder;
-import com.facebook.react.bridge.ReactApplicationContext;
-import com.swmansion.reanimated.EXReanimatedAdapter;
-
-import java.util.Collections;
-import java.util.List;
-
-import expo.modules.core.interfaces.Package;
-import expo.modules.core.interfaces.ReactNativeHostHandler;
-
-public class EXReanimatedPackage implements Package {
-  @Override
-  public List<? extends ReactNativeHostHandler> createReactNativeHostHandlers(Context context) {
-    final ReactNativeHostHandler handler = new ReactNativeHostHandler() {
-      @Override
-      public void onRegisterJSIModules(ReactApplicationContext reactApplicationContext, JavaScriptContextHolder jsContext, boolean useDeveloperSupport) {
-        EXReanimatedAdapter.registerJSIModules(reactApplicationContext, jsContext);
-      }
-    };
-    return Collections.singletonList(handler);
-  }
-}
diff --git a/node_modules/react-native-reanimated/expo-module.config.json b/node_modules/react-native-reanimated/expo-module.config.json
deleted file mode 100644
index 339d64e..0000000
--- a/node_modules/react-native-reanimated/expo-module.config.json
+++ /dev/null
@@ -1,3 +0,0 @@
-{
-  "platforms": ["android"]
-}
diff --git a/node_modules/react-native-reanimated/react-native-reanimated.d.ts b/node_modules/react-native-reanimated/react-native-reanimated.d.ts
index 7402bc5..2527b10 100644
--- a/node_modules/react-native-reanimated/react-native-reanimated.d.ts
+++ b/node_modules/react-native-reanimated/react-native-reanimated.d.ts
@@ -557,9 +557,10 @@ declare module 'react-native-reanimated' {
     finished?: boolean,
     current?: AnimatableValue
   ) => void;
+  export type EasingFactoryFunction = { factory: () => EasingFunction };
   export interface WithTimingConfig {
     duration?: number;
-    easing?: EasingFunction;
+    easing?: EasingFunction | EasingFunctionFactory;
   }
   export interface WithDecayConfig {
     deceleration?: number;
